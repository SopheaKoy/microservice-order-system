plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.4'
    id 'io.spring.dependency-management' version '1.1.3'
}

group = 'dev.sophea'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "2022.0.4")
}

dependencies {
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'

    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-aop'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    runtimeOnly 'io.micrometer:micrometer-registry-otlp'
    runtimeOnly 'io.micrometer:micrometer-registry-prometheus'

    implementation 'io.micrometer:micrometer-tracing-bridge-otel'
    implementation 'io.opentelemetry:opentelemetry-api:1.29.0'
    implementation 'io.opentelemetry:opentelemetry-context:1.29.0'
    implementation 'io.opentelemetry:opentelemetry-sdk:1.29.0'
    implementation 'io.opentelemetry:opentelemetry-sdk-trace:1.29.0'
    implementation 'io.opentelemetry:opentelemetry-sdk-metrics:1.29.0'
    implementation 'io.opentelemetry:opentelemetry-sdk-common:1.29.0'
    implementation 'io.opentelemetry:opentelemetry-sdk-extension-autoconfigure-spi:1.29.0'
    implementation 'io.opentelemetry:opentelemetry-extension-trace-propagators:1.29.0'
    implementation 'io.opentelemetry:opentelemetry-exporter-common:1.29.0'
    implementation 'io.opentelemetry:opentelemetry-exporter-otlp:1.29.0'
    implementation 'io.opentelemetry:opentelemetry-exporter-otlp-common:1.29.0'
    implementation 'io.opentelemetry.instrumentation:opentelemetry-instrumentation-api-semconv:1.29.0-alpha'

    implementation 'io.opentelemetry.instrumentation:opentelemetry-logback-appender-1.0:1.29.0-alpha'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
